}
x
x = 1:2
while(min(abs(diff(x)))<=1){
x = sample(sample(c(1:9,1:9),10))
}
x
x = 1:2
while(min(abs(diff(x)))<=1){
x = sample(sample(c(1:9,1:9),11))
}
x
x = 1:2
while(min(abs(diff(x)))<=1){
x = sample(sample(c(1:9,1:9),11))
}
x
sample(x,4)
x = c( "sum", "hate", "harm", "wit", "bond",
"yield", "worst", "twice")
sample(x,4)
sample(x,4)
replicate(3,sample(x,4))
replicate(3,sample(x,5))
t(replicate(3,sample(x,5)))
t(replicate(3,sample(x,4)))
t(replicate(3,sample(x,4)))
x = c("association", "opportunity", "representative", "organization", "considerable", "immediately", "university", "individual")
x = c( "sum", "hate", "harm", "wit", "bond",
"yield", "worst", "twice")
t(replicate(3,sample(x,4)))
x = c( "sum", "hate", "harm", "wit", "bond",
"yield", "worst", "twice")
t(replicate(3,sample(x,4)))
x = c( "sum", "hate", "harm", "wit", "bond",
"yield", "worst", "twice")
t(replicate(3,sample(x,4)))
t(replicate(3,sample(x,5)))
t(replicate(3,sample(x,6)))
t(replicate(3,sample(x,7)))
t(replicate(3,sample(x,7)))
x = c("association", "opportunity", "representative", "organization", "considerable", "immediately", "university", "individual")
t(replicate(3,sample(x,4)))
t(replicate(3,sample(x,5)))
t(replicate(2,sample(x,6)))
t(replicate(2,sample(x,7)))
t(replicate(2,sample(x,7)))
t(replicate(2,sample(x,7)))
t(replicate(2,sample(x,7)))
t(replicate(2,sample(x,6)))
sample(0:31,1)==0
g = function(){
if(sample(0:31,1)==0){return("m")}
return(sample(c("m","f"),1))
}
table(replicate(1000,g()))
prop.table(table(replicate(1000,g())))
prop.table(table(replicate(10000,g())))
(1/31) + ((30/31)*0.5)
prop.table(table(replicate(100000,g())))
kk = c(49,75,62,44,82,68,58,68,82,60,66,49,49,54,69,52,51,49,54,49,69,64,65)
eb = c(61,69,68,55,70,67,51,56,68,64,40,64,74,68,61,60,66,40,38,58,59,67,65,60,40,63,13)
hist(kk)
hist(eb)
mean(kk)
mean(eb)
sort(kk)
mean(eb[eb>14])
sd(kk)
sd(eb[eb>14])
abline(h = 0, col = 'green')
View(d)
d = data.frame()
View(d)
BSA2018.final.datatables <- read.table("~/Downloads/BSA2018 final datatables.xlsx", header=TRUE, quote="\"")
View(BSA2018.final.datatables)
?mean
?sum
?nchar
nchar("Seán")
nchar("Seán", type="char")
nchar("Seán", type="bytes")
?mean
log(100)
log10(100)
?log
e
1.2e-4
10^3
1.2e3
setwd("~/Documents/Teaching/CARDIFF/RCourse/IntroToRForAnthropologists/analysis/")
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
head(d)
hist(d$focal_year)
min(d$focal_year)
table(d$focal_year)
table(cut(d$focal_year,10))
table(cut(d$focal_year,seq(-2000,2000,by=10)))
table(d$focal_year)
sort(d$focal_year)
table(round(d$focal_year/100))
head(d)
length(d$society_id)
length(unique(d$society_id))
length(unique(d$language_glottocode))
table(d$code)
table(d$code_label)
t(t(table(d$code_label)))
d$flatRoof = d$code_label=="Flat"
head(d)
min(d$focal_year)
table(round(d$focal_year/100))
plot(d$focal_year)
range(d$focal_year)
table(round(d$focal_year/100))
d$focal_year
table(d$focal_year)
table(round(d$focal_year/100))
library(ape)
table(d$language_family,d$code_label)
table(d$language_family,d$flatRoof)
taxa = read.csv("../data/indo_european_B_summary.csv")
tree = read.nexus("../data/indo_european_B_summary.trees")
plot(tree)
head(taxa)
tree$tip.label = taxa[match(tree$tip.label,taxa$taxon),]$glottocode
head(tree)
tree = drop.tip(tree,"")
plot(tree)
tree$tip.label
taxa = read.csv("../data/indo_european_B_summary.csv",stringsAsFactors = F)
tree = read.nexus("../data/indo_european_B_summary.trees")
tree$tip.label = taxa[match(tree$tip.label,taxa$taxon),]$glottocode
tree = drop.tip(tree,"")
plot(tree)
write.nexus(tree, "../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
matches = match(tree$tip.label,taxa$taxon)
duplicated(taxa[matches,]$glottocode)
taxa = read.csv("../data/indo_european_B_summary.csv",stringsAsFactors = F)
tree = read.nexus("../data/indo_european_B_summary.trees")
matches = match(tree$tip.label,taxa$taxon)
duplicated(taxa[matches,]$glottocode)
dups = tree$tip.label[duplicated(taxa[matches,]$glottocode)]
tree = drop.tip(tree,dups)
tree$tip.label = taxa[match(tree$tip.label,taxa$taxon),]$glottocode
tree = drop.tip(tree,"")
plot(tree)
write.nexus(tree, "../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tree$tip.label
write.tree(tree, "../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
plot(tree)
d$language_glottocode
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tipsWithoutData
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tree$tip.label)
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
plot(tree)
?dotTree
library(phytools)
?dotTree
roofTypes = d$code_label
names(roofTypes) = d$language_glottocode
dotTree(tree,roofTypes)
dotTree(tree,roofTypes,legend = T)
roofTypes
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_glottocode
dotTree(tree,roofTypes,legend = T)
roofTypes
dotTree(tree,as.character(roofTypes),legend = T)
dot.legend(tree,roofTypes,legend = T)
dot.legend(tree,roofTypes,10)
dot.legend(tree,roofTypes,Ntip = 10)
dot.legend(tree,roofTypes,Ntip = 3)
dotTree(tree,roofTypes)
table(roofTypes)
table(d[d$language_glottocode %in% tree$tip.label,]$code_label)
legend(0,0,c("Flat","4 slopes",'2 slopes'))
legend(0,1,c("Flat","4 slopes",'2 slopes'))
legend(0,4,c("Flat","4 slopes",'2 slopes'))
legend(0,4,c("Flat","4 slopes",'2 slopes'),col=1:3)
legend(0,4,c("Flat","4 slopes",'2 slopes'),col=1:3,pch=16)
d[d$language_glottocode=="nucl1235",]
dotTree(tree,roofTypes,col=1:£)
dotTree(tree,roofTypes,col=1:3)
?dotTree
dotTree(tree,roofTypes,colors=1:3)
dotTree(tree,roofTypes,data.type="discrete")
dotTree(tree,roofTypes)
d[d$language_glottocode=="mode1248",]
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=c(16,16,1))
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","black"),pch=c(16,16,1))
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","black"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","black"),pch=1)
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","black"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
roofTypes
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
plot(tree)
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_name
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
fitER<-ace(roofTypes,tree,model="ER",type="discrete")
roofTypes
roofTypes = roofTypes[roofTypes %in% tree$tip.label]
dotTree(tree,roofTypes)
roofTypes
library(ape)
setwd("~/Documents/Teaching/CARDIFF/RCourse/IntroToRForAnthropologists/analysis/")
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
t(t(table(d$code_label)))
d$flatRoof = d$code_label=="Flat"
d$focal_year
range(d$focal_year)
table(round(d$focal_year/100))
d = d[d$focal_year >=1800,]
d = d[d$language_family== "Indo-European",]
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_name
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
roofTypes = roofTypes[names(roofTypes) %in% tree$tip.label]
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
fitER<-ace(roofTypes,tree,model="ER",type="discrete")
tree
length(roofTypes)
sort(names(roofTypes))
sort(tree$tip.label)
d[d$language_name=="English",]
library(ape)
setwd("~/Documents/Teaching/CARDIFF/RCourse/IntroToRForAnthropologists/analysis/")
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
t(t(table(d$code_label)))
d$flatRoof = d$code_label=="Flat"
d$focal_year
range(d$focal_year)
table(round(d$focal_year/100))
d = d[d$focal_year >=1800,]
d = d[d$language_family== "Indo-European",]
d = d[!duplicated(d$language_glottocode),]
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_name
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
roofTypes = roofTypes[names(roofTypes) %in% tree$tip.label]
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
fitER<-ace(roofTypes,tree,model="ER",type="discrete")
fitER
?ace
fitER<-ace(roofTypes,tree,model="ARD",type="discrete")
fitER
fitER<-ace(roofTypes,tree,model="ER",type="discrete")
fitER
fitER<-ace(roofTypes,tree,model="BM",type="discrete")
?ace
fitER<-ace(roofTypes,tree,model="ML",type="discrete")
fitER<-ace(roofTypes,tree,model="SYM",type="discrete")
fitER<-ace(roofTypes,tree,model="ARD",type="discrete")
plot(fitER)
plotTree(tree)
nodelabels(node=1:tree$Nnode+Ntip(tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.4)
fitARD<-ace(roofTypes,tree,model="ARD",type="discrete")
plotTree(tree)
nodelabels(node=1:tree$Nnode+Ntip(tree),
pie=fitARD$lik.anc,piecol=cols,cex=0.4)
nodelabels(node=1:tree$Nnode+Ntip(tree),
pie=fitARD$lik.anc,cex=0.4)
roofTypes
?tiplabels
tiplabels(pie=roofTypes)
?tiplabels
tiplabels()
tiplabels(col=roofTypes)
tiplabels(col=as.numeric(roofTypes))
tiplabels(bg=as.numeric(roofTypes))
dotTree(tree,roofTypes)
fitARD<-ace(roofTypes,tree,model="SYM",type="discrete")
fitARD
plotTree(tree)
nodelabels(node=1:tree$Nnode+Ntip(tree),
pie=fitARD$lik.anc,cex=0.4)
fitARD$lik.anc
fitARD<-ace(roofTypes,tree,model="ER",type="discrete")
fitARD$lik.anc
fitARD<-ace(roofTypes,tree,model="ARD",type="discrete")
fitARD$lik.anc
dotTree(tree,roofTypes)
?dotTree
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("yellow","gray","white"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
roofTypes
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),pch=16)
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("black","red","green"),pch=16)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col="black",pch=1,bg = NA)
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("black","red","green"),pch=16)
library(geige)
library(geiger)
install.packages("geiger")
install.packages("geiger")
install.packages("geiger")
library(ape)
library(geiger)
setwd("~/Documents/Teaching/CARDIFF/RCourse/IntroToRForAnthropologists/analysis/")
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
t(t(table(d$code_label)))
d$flatRoof = d$code_label=="Flat"
d$focal_year
range(d$focal_year)
table(round(d$focal_year/100))
d = d[d$focal_year >=1800,]
d = d[d$language_family== "Indo-European",]
d = d[!duplicated(d$language_glottocode),]
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_name
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
roofTypes = roofTypes[names(roofTypes) %in% tree$tip.label]
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("black","red","green"),pch=16)
?dotTree
library(ape)
library(phytools)
library(geiger)
setwd("~/Documents/Teaching/CARDIFF/RCourse/IntroToRForAnthropologists/analysis/")
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
t(t(table(d$code_label)))
d$flatRoof = d$code_label=="Flat"
d$focal_year
range(d$focal_year)
table(round(d$focal_year/100))
d = d[d$focal_year >=1800,]
d = d[d$language_family== "Indo-European",]
d = d[!duplicated(d$language_glottocode),]
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_name
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
roofTypes = roofTypes[names(roofTypes) %in% tree$tip.label]
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("black","red","green"),pch=16)
fitARD<-ace(roofTypes,tree,model="ARD",type="discrete")
plotTree(tree)
nodelabels(node=1:tree$Nnode+Ntip(tree),
pie=fitARD$lik.anc,cex=0.4)
tiplabels(bg=as.numeric(roofTypes))
add.simmap.legend(colors=cols,prompt=FALSE,x=0.9*par()$usr[1],
y=0.8*par()$usr[3],fsize=0.8)
?fitDiscrete
fitDiscrete(tree,roofTypes)
fit = fitDiscrete(tree,roofTypes)
summary(fit)
fit
fit = fitDiscrete(tree,roofTypes,transform = "lambda")
fit
fit$res
fit
fit$bnd
fit$lik
fit$opt
fit$opt$lambda
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("black","red","green"),pch=16)
pdf("../results/IndoEuropean_RoofTypes.pdf")
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),col=c("black","red","green"),pch=16)
dev.off()
pdf("../results/IndoEuropean_RoofTypes.pdf")
dotTree(tree,roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),
col=c("black","red","green"),
pch=16,
title = "Roof Shape")
dev.off()
cat(round(fit$opt$lambda,3),file="../results/IndoEuropean_RoofTypes_Lambda.txt")
round(fit$opt$lambda,3)
# Make a table of roof shape types
t(t(table(d$code_label)))
# Load the data
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
# Make a table of roof shape types
t(t(table(d$code_label)))
library(xtable)
xtable(table(d$code_label))
cat(xtable(table(d$code_label)),file="../results/RoofTypes_Frequency.tex")
xtable(table(d$code_label))
as.character(xtable(table(d$code_label)))
xtable(table(d$code_label))
print(xtable(table(d$code_label)),file="../results/RoofTypes_Frequency.tex")
?xtable
print(xtable(table(Frequency=d$code_label)),
file="../results/RoofTypes_Frequency.tex",
caption = "Frequency of roof shape types")
table(Frequency=d$code_label)
xtable(table(Frequency=d$code_label)
xtable(table(Frequency=d$code_label))
xtable(table(Frequency=d$code_label))
print(xtable(table(Frequency=d$code_label),
caption = "Frequency of roof shape types"),
file="../results/RoofTypes_Frequency.tex")
print(xtable(table(Frequency=d$code_label),
caption = "Frequency of roof shape types",
label = "roofFreq"),
file="../results/RoofTypes_Frequency.tex")
# Make a table of roof shape types
t(t(table(d$code_label)))
rm(list=ls())
setwd("~/Documents/Teaching/CARDIFF/RCourse/IntroToRForAnthropologists/analysis/")
3 + 3
library(ape)
library(phytools)
library(geiger)
# Load the data
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
View(d)
# Make a table of roof shape types
t(t(table(d$code_label)))
d$focal_year
# Check focal years
range(d$focal_year)
table(round(d$focal_year/100))
# Look at Indo-Euopean
d = d[d$language_family == "Indo-European",]
head(d)
table(d$language_family)
nrow(d$language_family)
nrow(d)
length(unique(d$language_glottocode))
sort(table(d$language_family))
sort(table(d$language_name))
# Load phylogeny
tree = read.tree("../data/IndoEuropean_bouckaert_et_al2012_withGlottocodes.nex")
plot(tree)
# Keep tips with data
tipsWithoutData = tree$tip.label[!tree$tip.label %in% d$language_glottocode]
tree = drop.tip(tree, tipsWithoutData)
plot(tree)
tree$tip.label = d[match(tree$tip.label,d$language_glottocode),]$language_name
plot(tree)
# Create roof type variable
roofTypes = factor(d$code_label)
names(roofTypes) = d$language_name
roofTypes = roofTypes[names(roofTypes) %in% tree$tip.label]
?dotTree
# Plot the data
dotTree(tree, roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),
col=c("black","red","green"),
pch=16,
title = "Roof Shape")
pdf("../results/IndoEuropean_RoofTypes.pdf")
dotTree(tree, roofTypes)
legend(0,4,c("Flat","2 slopes",'4 slopes'),
col=c("black","red","green"),
pch=16,
title = "Roof Shape")
dev.off()
# Calculate the phylogenetic signal
fit = fitDiscrete(tree,roofTypes, transform = "lambda")
length(roofTypes)
length(tree$tip.label)
roofTypes = roofTypes[names(roofTypes) %in% tree$tip.label]
length(roofTypes)
roofTypes = roofTypes[!duplicated(names(roofTypes))]
length(roofTypes)
roofTypes
# Calculate the phylogenetic signal
fit = fitDiscrete(tree,roofTypes, transform = "lambda")
fit
fit$opt$lambda
fit$opt$lambda
cat(round(fit$opt$lambda,3),file="../results/IndoEuropean_RoofTypes_Lambda.txt")
# Make a table of roof shape types
t(t(table(d$code_label)))
# Load the data
d = read.csv("../data/RoofShapeData.csv", stringsAsFactors = F)
# Make a table of roof shape types
t(t(table(d$code_label)))
library(xtable)
